#!/usr/bin/env zsh

# Author: Hanley Lee
# Website: https://www.hanleylee.com
# GitHub: https://github.com/hanleylee
# License:  MIT License

# MARK: distinguish the output to give correct color code(e.g. no color for vim execute)
# 是否应该有颜色
has_color=false
ncolors=$(tput colors)
if test -t 1 && test -n "$ncolors" && test "$ncolors" -ge 8; then
    has_color=true
fi

# MARK: generate correct color code depend on environment(e.g. no color for vim execute)
gen_color() {
    if "$has_color"; then
        echo "$1"
    else
        echo ""
    fi
}

# MARK: COLORS

# export GREEN='\033[7;32;40m' # 绿底黑字
# export RED='\e[0;41;30m'     # 红底黑字

# terminal color template {{{
NC=$(gen_color '\033[0m')

# Regular Colors
N_BLACK=$(gen_color '\033[0;30m')  # Black
N_RED=$(gen_color '\033[0;31m')  # Red
N_GREEN=$(gen_color '\033[0;32m')  # Green
N_YELLOW=$(gen_color '\033[0;33m')  # Yellow
N_BLUE=$(gen_color '\033[0;34m')  # Blue
N_PURPLE=$(gen_color '\033[0;35m')  # Purple
N_CYAN=$(gen_color '\033[0;36m')  # Cyan
N_WHITE=$(gen_color '\033[0;37m')  # White

# Bold
B_BLACK=$(gen_color '\033[1;30m')  # Black
B_RED=$(gen_color '\033[1;31m')  # Red
B_GREEN=$(gen_color '\033[1;32m')  # Green
B_YELLOW=$(gen_color '\033[1;33m')  # Yellow
B_BLUE=$(gen_color '\033[1;34m')  # Blue
B_PURPLE=$(gen_color '\033[1;35m')  # Purple
B_CYAN=$(gen_color '\033[1;36m')  # Cyan
B_WHITE=$(gen_color '\033[1;37m')  # White

# Underline
U_BLACK=$(gen_color '\033[4;30m')  # Black
U_RED=$(gen_color '\033[4;31m')  # Red
U_GREEN=$(gen_color '\033[4;32m')  # Green
U_YELLOW=$(gen_color '\033[4;33m')  # Yellow
U_BLUE=$(gen_color '\033[4;34m')  # Blue
U_PURPLE=$(gen_color '\033[4;35m')  # Purple
U_CYAN=$(gen_color '\033[4;36m')  # Cyan
U_WHITE=$(gen_color '\033[4;37m')  # White

# High Intensity
I_BLACK=$(gen_color '\033[0;90m')  # Black
I_RED=$(gen_color '\033[0;91m')  # Red
I_GREEN=$(gen_color '\033[0;92m')  # Green
I_YELLOW=$(gen_color '\033[0;93m')  # Yellow
I_BLUE=$(gen_color '\033[0;94m')  # Blue
I_PURPLE=$(gen_color '\033[0;95m')  # Purple
I_CYAN=$(gen_color '\033[0;96m')  # Cyan
I_WHITE=$(gen_color '\033[0;97m')  # White

# Bold High Intensity
B_I_BLACK=$(gen_color '\033[1;90m')  # Black
B_I_RED=$(gen_color '\033[1;91m')  # Red
B_I_GREEN=$(gen_color '\033[1;92m')  # Green
B_I_YELLOW=$(gen_color '\033[1;93m')  # Yellow
B_I_BLUE=$(gen_color '\033[1;94m')  # Blue
B_I_PURPLE=$(gen_color '\033[1;95m')  # Purple
B_I_CYAN=$(gen_color '\033[1;96m')  # Cyan
B_I_WHITE=$(gen_color '\033[1;97m')  # White

# Background
BG_BLACK=$(gen_color '\033[40m')    # Black
BG_RED=$(gen_color '\033[41m')    # Red
BG_GREEN=$(gen_color '\033[42m')    # Green
BG_YELLOW=$(gen_color '\033[43m')    # Yellow
BG_BLUE=$(gen_color '\033[44m')    # Blue
BG_PURPLE=$(gen_color '\033[45m')    # Purple
BG_CYAN=$(gen_color '\033[46m')    # Cyan
BG_WHITE=$(gen_color '\033[47m')    # White

# High Intensity backgrounds
BG_I_BLACK=$(gen_color '\033[0;100m') # Black
BG_I_RED=$(gen_color '\033[0;101m') # Red
BG_I_GREEN=$(gen_color '\033[0;102m') # Green
BG_I_YELLOW=$(gen_color '\033[0;103m') # Yellow
BG_I_BLUE=$(gen_color '\033[0;104m') # Blue
BG_I_PURPLE=$(gen_color '\033[0;105m') # Purple
BG_I_CYAN=$(gen_color '\033[0;106m') # Cyan
BG_I_WHITE=$(gen_color '\033[0;107m') # White
# }}}

# MARK: success/info/error/warn {{{
msg() {
    printf '%b\n' "$1" >&2
}

success() {
    msg "${N_GREEN}[✔] ${1}${NC}"
}

info() {
    msg "${N_BLUE}[➭] ${1}${NC}"
}

warn() {
    msg "${N_YELLOW}[⚠] ${1}${NC}"
}

error() {
    msg "${N_RED}[✘] ${1}${NC}"
}
# }}}

# echo_with_color {{{
echo_with_color () {
    printf '%b\n' "$1$2${NC}" >&2
}
# }}}

